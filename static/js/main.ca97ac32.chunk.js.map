{"version":3,"sources":["logo.svg","Components/GetNews.js","Components/GetNews2.js","Components/GetNews3.js","Components/GetNews4.js","Components/Header.js","App.js","reportWebVitals.js","index.js"],"names":["GetNews","state","News","FetchNews","axios","get","then","response","console","log","data","articles","setState","Grid","container","style","padding","item","xs","sm","md","lg","xl","Button","onClick","this","variant","fullWidth","color","TableContainer","Table","TableHead","TableRow","TableCell","TableBody","map","value","index","Avatar","src","urlToImage","author","title","description","publishedAt","content","Component","GetNews2","GetNews3","GetNews4","Header","AppBar","Toolbar","Typography","to","App","className","path","exact","component","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.ca97ac32.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/logo.6ce24c58.svg\";","import { Avatar, Button, Grid, Table, TableBody, TableCell, TableContainer, TableHead, TableRow } from '@mui/material'\r\nimport axios from 'axios'\r\nimport React, { Component } from 'react'\r\n\r\nexport default class GetNews extends Component {\r\n    state={\r\n        News:[]\r\n\r\n     }\r\n     FetchNews=()=>{\r\n         axios.get(\"https://newsapi.org/v2/everything?q=tesla&from=2021-08-20&sortBy=publishedAt&apiKey=010c65631b9e434e9155b5e7da91d5a9\").then(\r\n             (response)=>{\r\n                 console.log(response.data.articles)\r\n                 this.setState(\r\n                     {\r\n                         News:response.data.articles\r\n                     }\r\n                 )\r\n             }\r\n\r\n         )\r\n         \r\n\r\n     }\r\n    render() {\r\n        return (\r\n            <div>\r\n           <Grid container style ={{padding:80}}>\r\n               <Grid item xs={12} sm={12} md={12} lg={12} xl={12}>\r\n                   <Button\r\n                   onClick={this.FetchNews}\r\n                   variant=\"contained\"\r\n                   fullWidth\r\n                   color=\"secondary\"\r\n                   >FETCH NEWS</Button>\r\n\r\n\r\n               </Grid>\r\n               <Grid item xs={12} sm={12} md={12} lg={12} xl={12}>\r\n                   <TableContainer>\r\n                       <Table>\r\n                           <TableHead>\r\n                               <TableRow>\r\n                                   <TableCell>Image</TableCell>\r\n                                \r\n                                   <TableCell>Author</TableCell>\r\n                                   <TableCell>Title</TableCell>\r\n                                   <TableCell>Description</TableCell>\r\n                                   <TableCell>Date</TableCell>\r\n                                   <TableCell>Content</TableCell>\r\n                               </TableRow>\r\n                           </TableHead>\r\n                           <TableBody>\r\n                               {this.state.News.map(\r\n                                  (value,index)=>{\r\n                                      return<TableRow>\r\n                                          <TableCell><Avatar src={value.urlToImage}/></TableCell>\r\n                                          \r\n                                          <TableCell>{value.author}</TableCell>\r\n                                          <TableCell>{value.title}</TableCell>\r\n                                          <TableCell>{value.description}</TableCell>\r\n                                          <TableCell>{value.publishedAt}</TableCell>\r\n                                          <TableCell>{value.content}</TableCell>\r\n                                          </TableRow>\r\n                                          \r\n                                  }\r\n                               )}\r\n                           </TableBody>\r\n                       </Table>\r\n                   </TableContainer>\r\n\r\n\r\n               </Grid>\r\n               \r\n\r\n           </Grid>\r\n                \r\n            </div>\r\n        )\r\n    }\r\n}\r\n","import { Avatar, Button, Grid, Table, TableBody, TableCell, TableContainer, TableHead, TableRow } from '@mui/material'\r\nimport axios from 'axios'\r\nimport React, { Component } from 'react'\r\n\r\nexport default class GetNews2 extends Component {\r\n    state={\r\n        News:[]\r\n    }\r\n    FetchNews=()=>{\r\n        axios.get(\"https://newsapi.org/v2/everything?q=apple&from=2021-09-19&to=2021-09-19&sortBy=popularity&apiKey=010c65631b9e434e9155b5e7da91d5a9\").then(\r\n            (response)=>{\r\n                console.log(response.data.articles)\r\n                this.setState(\r\n                    {\r\n                        News:response.data.articles\r\n                    }\r\n                )\r\n            }\r\n\r\n            \r\n        )\r\n    }\r\n    render() {\r\n        return (\r\n            <div>\r\n                <Grid container style={{padding:80}}> \r\n                <Grid item xs={12} sm={12} md={12} lg={12} xl={12}>\r\n                    <Button\r\n                    onClick={this.FetchNews}\r\n                    variant=\"contained\"\r\n                    color=\"primary\"\r\n                    fullWidth\r\n                    >GetNews</Button>\r\n\r\n                </Grid>\r\n                <Grid item xs={12} sm={12} md={12} lg={12} xl={12}>\r\n                    <TableContainer>\r\n                        <Table>\r\n                            <TableHead>\r\n                                <TableRow>\r\n                                    <TableCell>Image</TableCell>\r\n                                    <TableCell>Author</TableCell>\r\n                                    <TableCell>Title</TableCell>\r\n                                    <TableCell>Description</TableCell>\r\n                                    <TableCell>Date</TableCell>\r\n                                    <TableCell>Content</TableCell>\r\n                                </TableRow>\r\n                            </TableHead>\r\n                            <TableBody>\r\n                            {this.state.News.map(\r\n                                (value,index)=>{\r\n                                    return<TableRow>\r\n                                        <TableCell><Avatar src={value.urlToImage}/></TableCell>\r\n                                        <TableCell>{value.author}</TableCell>\r\n                                        <TableCell>{value.title}</TableCell>\r\n                                        <TableCell>{value.description}</TableCell>\r\n                                        <TableCell>{value.publishedAt}</TableCell>\r\n                                        <TableCell>{value.content}</TableCell>\r\n                                    </TableRow>\r\n                                }\r\n                            )}\r\n                            </TableBody>\r\n                        </Table>\r\n                    </TableContainer>\r\n\r\n\r\n                </Grid>\r\n\r\n                </Grid>\r\n                \r\n            </div>\r\n        )\r\n    }\r\n}\r\n","import { Avatar, Button, Grid, SliderValueLabel, Table, TableBody, TableCell, TableContainer, TableHead, TableRow } from '@mui/material'\r\nimport axios from 'axios'\r\nimport React, { Component } from 'react'\r\n\r\nexport default class GetNews3 extends Component {\r\n    state={\r\n        News:[]\r\n    }\r\n    FetchNews=()=>{\r\n        axios.get(\"https://newsapi.org/v2/everything?domains=wsj.com&apiKey=010c65631b9e434e9155b5e7da91d5a9\").then(\r\n           (response)=>{\r\n               console.log(response.data.articles)\r\n               this.setState(\r\n                   {\r\n                       News:response.data.articles\r\n                   }\r\n               )\r\n           } \r\n        )\r\n    }\r\n    render() {\r\n        return (\r\n            <div>\r\n                <Grid container style={{padding:80}}>\r\n                    <Grid item xs={12} sm={12} md={12} lg={12} xl={12}>\r\n                        <Button\r\n                        onClick={this.FetchNews}\r\n                        variant=\"contained\"\r\n                        color=\"secondary\"\r\n                        fullWidth\r\n                        >FetchNews</Button>\r\n\r\n                    </Grid>\r\n                    <Grid item xs={12} sm={12} md={12} lg={12} xl={12}>\r\n                        <TableContainer>\r\n                            <Table>\r\n                                <TableHead>\r\n                                    <TableRow>\r\n                                        <TableCell>Image</TableCell>\r\n                                        <TableCell>Author</TableCell>\r\n                                        <TableCell>Title</TableCell>\r\n                                        <TableCell>Description</TableCell>\r\n                                        <TableCell>Date</TableCell>\r\n                                        <TableCell>Content</TableCell>\r\n                                    </TableRow>\r\n                                </TableHead>\r\n                                <TableBody>\r\n                                   {this.state.News.map(\r\n                                       (value,index)=>{\r\n                                           return<TableRow>\r\n                                               <TableCell><Avatar src={value.urlToImage}/></TableCell>\r\n                                               <TableCell>{value.author}</TableCell>\r\n                                               <TableCell>{value.title}</TableCell>\r\n                                               <TableCell>{value.description}</TableCell>\r\n                                               <TableCell>{value.publishedAt}</TableCell>\r\n                                               <TableCell>{value.content}</TableCell>\r\n\r\n                                           </TableRow>\r\n                                       }\r\n                                   )} \r\n                                </TableBody>\r\n                            </Table>\r\n                        </TableContainer>\r\n                        \r\n\r\n                    </Grid>\r\n\r\n                </Grid>\r\n                \r\n            </div>\r\n        )\r\n    }\r\n}\r\n","import { Avatar, Button, Grid, Table, TableBody, TableCell, TableContainer, TableHead, TableRow } from '@mui/material'\r\nimport axios from 'axios'\r\nimport React, { Component } from 'react'\r\n\r\nexport default class GetNews4 extends Component {\r\n    state={\r\n        News:[]\r\n    }\r\n    FetchNews=()=>{\r\n        axios.get(\"https://newsapi.org/v2/top-headlines?country=us&category=business&apiKey=010c65631b9e434e9155b5e7da91d5a9\").then(\r\n            (response)=>{\r\n                console.log(response.data.articles)\r\n                this.setState(\r\n                    {\r\n                        News:response.data.articles\r\n                    }\r\n                )\r\n            }\r\n        )\r\n    }\r\n    render() {\r\n        return (\r\n            <div>\r\n                <Grid container style={{padding:80}}>\r\n                    <Grid item xs={12} sm={12} md={12} lg={12} xl={12}>\r\n                        <Button\r\n                        onClick={this.FetchNews}\r\n                        variant=\"contained\"\r\n                        color=\"primary\"\r\n                        fullWidth\r\n                        >GetNews</Button>\r\n\r\n                    </Grid>\r\n                    <Grid item xs={12} sm={12} md={12} lg={12} xl={12}>\r\n                        <TableContainer>\r\n                            <Table>\r\n                                <TableHead>\r\n                                    <TableRow>\r\n                                        <TableCell>Image</TableCell>\r\n                                        <TableCell>Author</TableCell>\r\n                                        <TableCell>Title</TableCell>\r\n                                        <TableCell>Description</TableCell>\r\n                                        <TableCell>Date</TableCell>\r\n                                        <TableCell>Content</TableCell>\r\n                                    </TableRow>\r\n                                </TableHead>\r\n                                <TableBody>\r\n                                    {this.state.News.map(\r\n                                        (value,index)=>{\r\n                                            return<TableRow>\r\n                                                <TableCell><Avatar src={value.urlToImage}/></TableCell>\r\n                                                <TableCell>{value.author}</TableCell>\r\n                                                <TableCell>{value.title}</TableCell>\r\n                                                <TableCell>{value.description}</TableCell>\r\n                                                <TableCell>{value.publishedAt}</TableCell>\r\n                                                <TableCell>{value.content}</TableCell>\r\n                                            </TableRow>\r\n                                        }\r\n                                    )}\r\n                                </TableBody>\r\n                            </Table>\r\n                        </TableContainer>\r\n                   </Grid>\r\n\r\n                </Grid>\r\n                \r\n            </div>\r\n        )\r\n    }\r\n}\r\n","import { AppBar, Toolbar, Typography } from '@mui/material'\r\nimport React, { Component } from 'react'\r\nimport { Link } from 'react-router-dom'\r\n\r\nexport default class Header extends Component {\r\n    render() {\r\n        return (\r\n            <div>\r\n                <AppBar>\r\n\r\n                    <Toolbar>\r\n                    <Typography>NEWS APP</Typography>\r\n                    <Link to=\"/\">Getnews1</Link>\r\n                    <Link to=\"/News2\">Getnews2</Link>\r\n                    <Link to=\"/News3\">Getnews3</Link>\r\n                    <Link to=\"/News4\">Getnews4</Link>\r\n                    </Toolbar>\r\n                </AppBar>\r\n                \r\n            </div>\r\n        )\r\n    }\r\n}\r\n","import logo from './logo.svg';\nimport './App.css';\nimport News from './Components/GetNews';\nimport GetNews from './Components/GetNews';\nimport GetNews2 from './Components/GetNews2';\nimport GetNews3 from './Components/GetNews3';\nimport GetNews4 from './Components/GetNews4';\nimport Header from './Components/Header';\nimport { BrowserRouter,Route } from 'react-router-dom';\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      \n      <BrowserRouter>\n      <Header/>\n      <Route path=\"/\" exact component={GetNews}/>\n      <Route path=\"/News2\" exact component={GetNews2}/>\n      <Route path=\"/News3\" exact component={GetNews3}/>\n      <Route path=\"/News4\" exact component={GetNews4}/>\n\n      </BrowserRouter>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}